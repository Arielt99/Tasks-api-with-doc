openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Arielt99/Tasks_Api/1.0
  - description: heroku host
    url: 'https://ariel-task-api-w-doc.herokuapp.com/api'
info:
  title: Tasks API
  version: '1.0'
  description: >
    This is Tasks API
  license:
    name: MIT
    url: 'https://github.com/Arielt99/Tasks-api-with-doc/blob/master/LICENSE'
tags:
  - name: Tasks
    description: Operations available for tasks
  - name: Users
    description: Operations available for users
paths:
  '/tasks':
    get:
      tags:
        - Tasks

      summary: List of tasks

      description: |
        Display list of user tasks.
      parameters:
        - name: completed
          in: query
          description: filter tasks by status
          required: false
          style: form
          explode: true
          schema:
            minItems: 0
            type: boolean

      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks'
        '401':
          description: unauthorized
      security:
        - bearerAuth: []
    post:
      tags:
        - Tasks
      summary: Creation task
      description: |
        Create task with additional parameters
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreationTask'
        required: true
      responses:
        '201':
          description: task created successfully
          content:
            application/json:
              examples:
                201-task-created-successfully:
                  $ref: '#/components/examples/201-task-created-successfully'
        '401':
          description: unauthorized
        '422':
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedResponse'
              examples:
                422-creation-body-missing:
                  $ref: '#/components/examples/422-creation-body-missing'
                422-creation-body-not-a-string:
                  $ref: '#/components/examples/422-creation-body-not-a-string'
      security:
        - bearerAuth: []
  '/tasks/{id}':
    get:
      tags:
        - Tasks
      summary: get one task
      description: |
        Select task by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: return task by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OneTask'
        '401':
          description: unauthorized
        '404':
          description: not found
      security:
        - bearerAuth: []
    put:
      tags:
        - Tasks
      summary: update a task
      description: |
        Update task with additional parameters
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateTask'
        required: true
      responses:
        '200':
          description: task updated successfully
          content:
            application/json:
              examples:
                200-task-updated-successfully:
                  $ref: '#/components/examples/200-task-updated-successfully'
        '401':
          description: unauthorized
        '404':
          description: not found
        '422':
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedResponse'
              examples:
                422-update-complete-missing:
                  $ref: '#/components/examples/422-update-completed-missing'
                422-update-complete-not-a-boolean:
                  $ref: '#/components/examples/422-update-completed-not-a-boolean'
      security:
        - bearerAuth: []
    delete:
      tags:
        - Tasks
      description: |
        Delete task by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '201':
          description: task deleted successfully
          content:
            application/json:
              examples:
                200-task-deleted-successfully:
                  $ref: '#/components/examples/200-task-deleted-successfully'
        '401':
          description: unauthorized
        '404':
          description: not found
      security:
        - bearerAuth: []
  '/register':
    post:
      tags:
        - Users
      summary: User registration
      description: |
        Register
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      responses:
        '201':
          description: return the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'
        '422':
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedResponse'
              examples:
                422-register-email-missing:
                  $ref: '#/components/examples/422-auth-email-missing'
                422-register-email-wrong-format:
                  $ref: '#/components/examples/422-auth-email-wrong-format'
                422-register-email-already-taken:
                  $ref: '#/components/examples/422-auth-email-already-taken'
                422-register-email-not-a-string:
                  $ref: '#/components/examples/422-auth-email-not-a-string'
                422-register-password-missing:
                  $ref: '#/components/examples/422-auth-password-missing'
                422-register-password-wrong-format:
                  $ref: '#/components/examples/422-auth-password-wrong-format'
                422-register-password-too-short:
                  $ref: '#/components/examples/422-auth-password-too-short'
                422-register-password-not-a-string:
                  $ref: '#/components/examples/422-auth-password-not-a-string'
                422-register-name-missing:
                  $ref: '#/components/examples/422-auth-name-missing'
                422-register-name-not-a-string:
                  $ref: '#/components/examples/422-auth-name-not-a-string'
  '/login':
    post:
      tags:
        - Users
      summary: User connection
      description: |
        Login
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        '201':
          description: return the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'
        '422':
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedResponse'
              examples:
                422-login-email-missing:
                  $ref: '#/components/examples/422-auth-email-missing'
                422-login-email-wrong-format:
                  $ref: '#/components/examples/422-auth-email-wrong-format'
                422-login-email-not-matching:
                  $ref: '#/components/examples/422-auth-email-not-matching'
                422-login-email-not-a-string:
                  $ref: '#/components/examples/422-auth-email-not-a-string'
                422-login-password-missing:
                  $ref: '#/components/examples/422-auth-password-missing'
                422-login-password-wrong-format:
                  $ref: '#/components/examples/422-auth-password-wrong-format'
                422-login-password-too-short:
                  $ref: '#/components/examples/422-auth-password-too-short'
                422-login-password-not-matching:
                  $ref: '#/components/examples/422-auth-password-not-matching'
                422-login-password-not-a-string:
                  $ref: '#/components/examples/422-auth-password-not-a-string'
components:
  schemas:
    Tasks:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
    OneTask:
      type: object
      properties:
        task:
          type: array
          items:
            $ref: '#/components/schemas/Task'
    Task:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 1
        body:
          type: string
          example: "example task"
        completed:
          type: boolean
          example: false
        created_at:
          type: string
          format: date-time
          example: '2000-01-01T17:32:28Z'
        updated_at:
          type: string
          format: date-time
          example: '2000-01-01T18:32:28Z'
    CreationTask:
      items:
        required:
        - body
      properties:
        body:
          type: string
          example: your task
    UpdateTask:
      items:
        required:
          - completed
      properties:
        completed:
          type: boolean
          example: true
    AdvancedResponse:
      type: object
      properties:
        message:
          type: string
          example: "The given data was invalid."
        errors:
          items:
            $ref: "#/components/schemas/ErrorFields"
    ErrorFields:
      type: string
      description: "an error message telling you what are the issues"
      example: "error in the fields"
    Register:
      items:
        required:
          - email
          - password
          - name
      properties:
        email:
          type: string
          example: "john@doe.com"
        password:
          type: string
          description: "Must have 6 characters,at least one lower case, one uper case, and one number"
          example: "Password12"
        name:
          type: string
          example: "John Doe"
    Login:
      items:
        required:
          - email
          - password
      properties:
        email:
          type: string
          example: "john@doe.com"
        password:
          type: string
          description: "Must have 6 characters,at least one lower case, one uper case, and one number"
          example: "Password12"
    Auth:
      properties:
        user:
          type: array
          items:
            $ref: '#/components/schemas/User'
        token:
          type: string
          example: "6|52CcciBDqbOtFOXb1s8YW1tJfLOfqpYYFACKrw4I"
    User:
      properties:
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          example: "john@doe.com"
        created_at:
          type: string
          format: date-time
          example: '2000-01-01T18:32:28Z'
        updated_at:
          type: string
          format: date-time
          example: '2000-01-01T18:32:28Z'
        id:
          type: integer
          example: 1
  examples:
    200-task-updated-successfully:
      value: |-
        { "message": "Task updated successfully."}
    200-task-deleted-successfully:
      value: |-
        { "message": "Task deleted successfully."}
    201-task-created-successfully:
      value: |-
        { "message": "Task created successfully."}
    422-creation-body-missing:
      value: |-
        { "message": "The given data was invalid.", "errors": { "body": [ "The body field is required."] }
    422-creation-body-not-a-string:
      value: |-
        { "message": "The given data was invalid.", "errors": { "body": [ "The body must be a string."] }
    422-update-completed-missing:
      value: |-
        { "message": "The given data was invalid.", "errors": { "completed": [ "The completed field is required."] }
    422-update-completed-not-a-boolean:
      value: |-
        { "message": "The given data was invalid.", "errors": { "completed": [ "The completed field must be true or false."] }
    422-auth-email-missing:
      value: |-
        { "message": "The given data was invalid.", "errors": { "email": [ "The email field is required."] }
    422-auth-email-wrong-format:
      value: |-
        { "message": "The given data was invalid.", "errors": { "email": [ "The email must be a valid email address."] }
    422-auth-email-already-taken:
      value: |-
        { "message": "The given data was invalid.", "errors": { "email": [ "The email has already been taken."] }
    422-auth-email-not-matching:
      value: |-
        { "message": "The given data was invalid.", "errors": { "email": [ "The email do not match our records."] }
    422-auth-email-not-a-string:
      value: |-
        { "message": "The given data was invalid.", "errors": { "email": [ "The email must be a string."] }
    422-auth-password-missing:
      value: |-
        { "message": "The given data was invalid.", "errors": { "password": [ "The password field is required."] }
    422-auth-password-wrong-format:
      value: |-
        { "message": "The given data was invalid.", "errors": { "password": [ "The password format is invalid."] }
    422-auth-password-too-short:
      value: |-
        { "message": "The given data was invalid.", "errors": { "password": [ "The password must be at least 6 characters."] }
    422-auth-password-not-matching:
      value: |-
        { "message": "The given data was invalid.", "errors": { "password": [ "The password do not match our records."] }
    422-auth-password-not-a-string:
      value: |-
        { "message": "The given data was invalid.", "errors": { "password": [ "The password must be a string."] }
    422-auth-name-missing:
      value: |-
        { "message": "The given data was invalid.", "errors": { "name": [ "The name field is required."] }
    422-auth-name-not-a-string:
      value: |-
        { "message": "The given data was invalid.", "errors": { "name": [ "The name must be a string."] }
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
